// <auto-generated />
using System;
using CollegeDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CollegeDB.Migrations
{
    [DbContext(typeof(AppDBcon))]
    [Migration("20241105113829_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CollegeDB.Course", b =>
                {
                    b.Property<int>("Course_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Course_id"));

                    b.Property<string>("Course_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Department_id")
                        .HasColumnType("int");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Course_id");

                    b.HasIndex("Department_id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CollegeDB.Department", b =>
                {
                    b.Property<int>("Department_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Department_id"));

                    b.Property<string>("D_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Department_id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CollegeDB.Exams", b =>
                {
                    b.Property<int>("Exam_code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Exam_code"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Department_id")
                        .HasColumnType("int");

                    b.Property<int>("Room")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("Exam_code");

                    b.HasIndex("Department_id");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("CollegeDB.Faculty", b =>
                {
                    b.Property<int>("F_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("F_id"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mobile_no")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("F_id");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("CollegeDB.Hostel", b =>
                {
                    b.Property<int>("Hostel_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Hostel_id"));

                    b.Property<string>("Hostel_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("No_of_seats")
                        .HasColumnType("int");

                    b.HasKey("Hostel_id");

                    b.ToTable("Hostels");
                });

            modelBuilder.Entity("CollegeDB.Student", b =>
                {
                    b.Property<int>("S_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("S_id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<int>("Hostel_id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Phone_no")
                        .HasColumnType("int");

                    b.HasKey("S_id");

                    b.HasIndex("Hostel_id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CollegeDB.Subject", b =>
                {
                    b.Property<int>("Subject_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Subject_id"));

                    b.Property<string>("Subject_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Subject_id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("CourseFaculty", b =>
                {
                    b.Property<int>("CoursesCourse_id")
                        .HasColumnType("int");

                    b.Property<int>("FacultiesF_id")
                        .HasColumnType("int");

                    b.HasKey("CoursesCourse_id", "FacultiesF_id");

                    b.HasIndex("FacultiesF_id");

                    b.ToTable("CourseFaculty");
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesCourse_id")
                        .HasColumnType("int");

                    b.Property<int>("StudentsS_id")
                        .HasColumnType("int");

                    b.HasKey("CoursesCourse_id", "StudentsS_id");

                    b.HasIndex("StudentsS_id");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("ExamsStudent", b =>
                {
                    b.Property<int>("ExamsExam_code")
                        .HasColumnType("int");

                    b.Property<int>("StudentsS_id")
                        .HasColumnType("int");

                    b.HasKey("ExamsExam_code", "StudentsS_id");

                    b.HasIndex("StudentsS_id");

                    b.ToTable("ExamsStudent");
                });

            modelBuilder.Entity("FacultySubject", b =>
                {
                    b.Property<int>("FacultiesF_id")
                        .HasColumnType("int");

                    b.Property<int>("SubjectsSubject_id")
                        .HasColumnType("int");

                    b.HasKey("FacultiesF_id", "SubjectsSubject_id");

                    b.HasIndex("SubjectsSubject_id");

                    b.ToTable("FacultySubject");
                });

            modelBuilder.Entity("CollegeDB.Course", b =>
                {
                    b.HasOne("CollegeDB.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("Department_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CollegeDB.Exams", b =>
                {
                    b.HasOne("CollegeDB.Department", null)
                        .WithMany("Exams")
                        .HasForeignKey("Department_id");
                });

            modelBuilder.Entity("CollegeDB.Student", b =>
                {
                    b.HasOne("CollegeDB.Hostel", "Hostel")
                        .WithMany("Students")
                        .HasForeignKey("Hostel_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hostel");
                });

            modelBuilder.Entity("CourseFaculty", b =>
                {
                    b.HasOne("CollegeDB.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCourse_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CollegeDB.Faculty", null)
                        .WithMany()
                        .HasForeignKey("FacultiesF_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("CollegeDB.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCourse_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CollegeDB.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsS_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExamsStudent", b =>
                {
                    b.HasOne("CollegeDB.Exams", null)
                        .WithMany()
                        .HasForeignKey("ExamsExam_code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CollegeDB.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsS_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FacultySubject", b =>
                {
                    b.HasOne("CollegeDB.Faculty", null)
                        .WithMany()
                        .HasForeignKey("FacultiesF_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CollegeDB.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectsSubject_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CollegeDB.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("CollegeDB.Hostel", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
