// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using companyORM;

#nullable disable

namespace companyORM.Migrations
{
    [DbContext(typeof(AppDBcon))]
    [Migration("20241106064930_InitialCreat")]
    partial class InitialCreat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("companyORM.Department", b =>
                {
                    b.Property<int>("Dnumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dnumber"));

                    b.Property<string>("DName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Marg_ssn")
                        .HasColumnType("int");

                    b.Property<int>("Marg_start_date")
                        .HasColumnType("int");

                    b.HasKey("Dnumber");

                    b.HasIndex("Marg_ssn");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("companyORM.Dependent", b =>
                {
                    b.Property<int>("ESSN")
                        .HasColumnType("int");

                    b.Property<string>("Dependent_name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Bdate")
                        .HasColumnType("int");

                    b.Property<bool>("sex")
                        .HasColumnType("bit");

                    b.HasKey("ESSN", "Dependent_name");

                    b.ToTable("Dependentes");
                });

            modelBuilder.Entity("companyORM.Dept_Location", b =>
                {
                    b.Property<int>("Dnumber")
                        .HasColumnType("int");

                    b.Property<string>("Dlocation")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Dnumber", "Dlocation");

                    b.ToTable("Dept_Locationes");
                });

            modelBuilder.Entity("companyORM.Employee", b =>
                {
                    b.Property<int>("SSN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SSN"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Bdate")
                        .HasColumnType("int");

                    b.Property<int>("Dnumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Super_ssn")
                        .HasColumnType("int");

                    b.Property<decimal>("salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("sex")
                        .HasColumnType("bit");

                    b.HasKey("SSN");

                    b.HasIndex("Dnumber");

                    b.HasIndex("Super_ssn");

                    b.ToTable("Employeese");
                });

            modelBuilder.Entity("companyORM.Project", b =>
                {
                    b.Property<int>("Pnumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pnumber"));

                    b.Property<int>("Dnumber")
                        .HasColumnType("int");

                    b.Property<string>("Plocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Pnumber");

                    b.HasIndex("Dnumber");

                    b.ToTable("Projectes");
                });

            modelBuilder.Entity("companyORM.Works_On", b =>
                {
                    b.Property<int>("ESSN")
                        .HasColumnType("int");

                    b.Property<int>("Pnumber")
                        .HasColumnType("int");

                    b.Property<decimal>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ESSN", "Pnumber");

                    b.HasIndex("Pnumber");

                    b.ToTable("Works_Ones");
                });

            modelBuilder.Entity("companyORM.Department", b =>
                {
                    b.HasOne("companyORM.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("Marg_ssn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("companyORM.Dependent", b =>
                {
                    b.HasOne("companyORM.Employee", "employee")
                        .WithMany("Dependentes")
                        .HasForeignKey("ESSN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("companyORM.Dept_Location", b =>
                {
                    b.HasOne("companyORM.Department", "department")
                        .WithMany("Dept_Locations")
                        .HasForeignKey("Dnumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("companyORM.Employee", b =>
                {
                    b.HasOne("companyORM.Department", "department")
                        .WithMany("Employees")
                        .HasForeignKey("Dnumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("companyORM.Employee", "employee")
                        .WithMany("employees")
                        .HasForeignKey("Super_ssn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("companyORM.Project", b =>
                {
                    b.HasOne("companyORM.Department", "department")
                        .WithMany("Projects")
                        .HasForeignKey("Dnumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("companyORM.Works_On", b =>
                {
                    b.HasOne("companyORM.Employee", "employee")
                        .WithMany("Works_Ones")
                        .HasForeignKey("ESSN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("companyORM.Project", "project")
                        .WithMany("Works_Ones")
                        .HasForeignKey("Pnumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");

                    b.Navigation("project");
                });

            modelBuilder.Entity("companyORM.Department", b =>
                {
                    b.Navigation("Dept_Locations");

                    b.Navigation("Employees");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("companyORM.Employee", b =>
                {
                    b.Navigation("Dependentes");

                    b.Navigation("Works_Ones");

                    b.Navigation("employees");
                });

            modelBuilder.Entity("companyORM.Project", b =>
                {
                    b.Navigation("Works_Ones");
                });
#pragma warning restore 612, 618
        }
    }
}
